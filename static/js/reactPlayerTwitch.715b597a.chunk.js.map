{"version":3,"sources":["../node_modules/react-player/lib/players/Twitch.js"],"names":["mod","__create","Object","create","__defProp","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__getProtoOf","getPrototypeOf","__hasOwnProp","prototype","hasOwnProperty","__copyProps","to","from","except","desc","key","call","get","enumerable","__publicField","obj","value","configurable","writable","__defNormalProp","Twitch_exports","target","all","name","__export","default","Twitch","module","exports","import_react","isNodeMode","__esModule","__toESM","__webpack_require__","import_utils","import_patterns","SDK_URL","SDK_GLOBAL","PLAYER_ID_PREFIX","Component","[object Object]","super","arguments","this","callPlayer","props","config","playerId","concat","randomString","onMount","url","isReady","playsinline","onError","controls","isChannel","MATCH_URL_TWITCH_CHANNEL","test","id","match","MATCH_URL_TWITCH_VIDEO","player","setChannel","setVideo","getSDK","then","Twitch2","Player","playerID","video","channel","height","width","autoplay","playing","muted","time","parseStartTime","options","READY","PLAYING","PAUSE","ENDED","ONLINE","OFFLINE","SEEK","addEventListener","onReady","onPlay","onPause","onEnded","onSeek","onLoaded","seconds","keepPlaying","length","undefined","pause","fraction","createElement","style","canPlay","twitch"],"mappings":"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","file":"static/js/reactPlayerTwitch.715b597a.chunk.js","sourcesContent":["var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n// If the importer is in node compatibility mode or this is not an ESM\n// file that has been converted to a CommonJS file using a Babel-\n// compatible transform (i.e. \"__esModule\" has not been set), then set\n// \"default\" to the CommonJS \"module.exports\" for node compatibility.\nisNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n  value: mod,\n  enumerable: true\n}) : target, mod));\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nvar Twitch_exports = {};\n__export(Twitch_exports, {\n  default: () => Twitch\n});\nmodule.exports = __toCommonJS(Twitch_exports);\nvar import_react = __toESM(require(\"react\"));\nvar import_utils = require(\"../utils\");\nvar import_patterns = require(\"../patterns\");\nconst SDK_URL = \"https://player.twitch.tv/js/embed/v1.js\";\nconst SDK_GLOBAL = \"Twitch\";\nconst PLAYER_ID_PREFIX = \"twitch-player-\";\nclass Twitch extends import_react.Component {\n  constructor() {\n    super(...arguments);\n    __publicField(this, \"callPlayer\", import_utils.callPlayer);\n    __publicField(this, \"playerID\", this.props.config.playerId || \"\".concat(PLAYER_ID_PREFIX).concat((0, import_utils.randomString)()));\n    __publicField(this, \"mute\", () => {\n      this.callPlayer(\"setMuted\", true);\n    });\n    __publicField(this, \"unmute\", () => {\n      this.callPlayer(\"setMuted\", false);\n    });\n  }\n  componentDidMount() {\n    this.props.onMount && this.props.onMount(this);\n  }\n  load(url, isReady) {\n    const {\n      playsinline,\n      onError,\n      config,\n      controls\n    } = this.props;\n    const isChannel = import_patterns.MATCH_URL_TWITCH_CHANNEL.test(url);\n    const id = isChannel ? url.match(import_patterns.MATCH_URL_TWITCH_CHANNEL)[1] : url.match(import_patterns.MATCH_URL_TWITCH_VIDEO)[1];\n    if (isReady) {\n      if (isChannel) {\n        this.player.setChannel(id);\n      } else {\n        this.player.setVideo(\"v\" + id);\n      }\n      return;\n    }\n    (0, import_utils.getSDK)(SDK_URL, SDK_GLOBAL).then(Twitch2 => {\n      this.player = new Twitch2.Player(this.playerID, {\n        video: isChannel ? \"\" : id,\n        channel: isChannel ? id : \"\",\n        height: \"100%\",\n        width: \"100%\",\n        playsinline,\n        autoplay: this.props.playing,\n        muted: this.props.muted,\n        // https://github.com/CookPete/react-player/issues/733#issuecomment-549085859\n        controls: isChannel ? true : controls,\n        time: (0, import_utils.parseStartTime)(url),\n        ...config.options\n      });\n      const {\n        READY,\n        PLAYING,\n        PAUSE,\n        ENDED,\n        ONLINE,\n        OFFLINE,\n        SEEK\n      } = Twitch2.Player;\n      this.player.addEventListener(READY, this.props.onReady);\n      this.player.addEventListener(PLAYING, this.props.onPlay);\n      this.player.addEventListener(PAUSE, this.props.onPause);\n      this.player.addEventListener(ENDED, this.props.onEnded);\n      this.player.addEventListener(SEEK, this.props.onSeek);\n      this.player.addEventListener(ONLINE, this.props.onLoaded);\n      this.player.addEventListener(OFFLINE, this.props.onLoaded);\n    }, onError);\n  }\n  play() {\n    this.callPlayer(\"play\");\n  }\n  pause() {\n    this.callPlayer(\"pause\");\n  }\n  stop() {\n    this.callPlayer(\"pause\");\n  }\n  seekTo(seconds) {\n    let keepPlaying = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    this.callPlayer(\"seek\", seconds);\n    if (!keepPlaying) {\n      this.pause();\n    }\n  }\n  setVolume(fraction) {\n    this.callPlayer(\"setVolume\", fraction);\n  }\n  getDuration() {\n    return this.callPlayer(\"getDuration\");\n  }\n  getCurrentTime() {\n    return this.callPlayer(\"getCurrentTime\");\n  }\n  getSecondsLoaded() {\n    return null;\n  }\n  render() {\n    const style = {\n      width: \"100%\",\n      height: \"100%\"\n    };\n    return /* @__PURE__ */import_react.default.createElement(\"div\", {\n      style,\n      id: this.playerID\n    });\n  }\n}\n__publicField(Twitch, \"displayName\", \"Twitch\");\n__publicField(Twitch, \"canPlay\", import_patterns.canPlay.twitch);\n__publicField(Twitch, \"loopOnEnded\", true);"],"sourceRoot":""}