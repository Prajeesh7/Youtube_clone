{"version":3,"sources":["../node_modules/react-player/lib/players/Wistia.js"],"names":["mod","__create","Object","create","__defProp","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__getProtoOf","getPrototypeOf","__hasOwnProp","prototype","hasOwnProperty","__copyProps","to","from","except","desc","key","call","get","enumerable","__publicField","obj","value","configurable","writable","__defNormalProp","Wistia_exports","target","all","name","__export","default","Wistia","module","exports","import_react","isNodeMode","__esModule","__toESM","__webpack_require__","import_utils","import_patterns","SDK_URL","SDK_GLOBAL","PLAYER_ID_PREFIX","Component","[object Object]","_this","super","arguments","this","callPlayer","props","config","playerId","concat","randomString","onPlay","onPause","onSeek","onEnded","onPlaybackRateChange","onMount","url","playing","muted","controls","onReady","onError","getSDK","then","Wistia2","customControls","forEach","control","defineControl","window","_wq","push","id","playerID","options","autoPlay","silentAutoPlay","controlsVisibleOnLoad","fullscreenButton","playbar","playbackRateControl","qualityControl","volumeControl","settingsControl","smallPlayButton","player","unbind","bind","seconds","keepPlaying","length","undefined","pause","fraction","rate","videoID","match","MATCH_URL_WISTIA","className","createElement","style","width","height","canPlay","wistia"],"mappings":"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","file":"static/js/reactPlayerWistia.147b015a.chunk.js","sourcesContent":["var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n// If the importer is in node compatibility mode or this is not an ESM\n// file that has been converted to a CommonJS file using a Babel-\n// compatible transform (i.e. \"__esModule\" has not been set), then set\n// \"default\" to the CommonJS \"module.exports\" for node compatibility.\nisNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n  value: mod,\n  enumerable: true\n}) : target, mod));\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nvar Wistia_exports = {};\n__export(Wistia_exports, {\n  default: () => Wistia\n});\nmodule.exports = __toCommonJS(Wistia_exports);\nvar import_react = __toESM(require(\"react\"));\nvar import_utils = require(\"../utils\");\nvar import_patterns = require(\"../patterns\");\nconst SDK_URL = \"https://fast.wistia.com/assets/external/E-v1.js\";\nconst SDK_GLOBAL = \"Wistia\";\nconst PLAYER_ID_PREFIX = \"wistia-player-\";\nclass Wistia extends import_react.Component {\n  constructor() {\n    var _this;\n    super(...arguments);\n    _this = this;\n    __publicField(this, \"callPlayer\", import_utils.callPlayer);\n    __publicField(this, \"playerID\", this.props.config.playerId || \"\".concat(PLAYER_ID_PREFIX).concat((0, import_utils.randomString)()));\n    // Proxy methods to prevent listener leaks\n    __publicField(this, \"onPlay\", function () {\n      return _this.props.onPlay(...arguments);\n    });\n    __publicField(this, \"onPause\", function () {\n      return _this.props.onPause(...arguments);\n    });\n    __publicField(this, \"onSeek\", function () {\n      return _this.props.onSeek(...arguments);\n    });\n    __publicField(this, \"onEnded\", function () {\n      return _this.props.onEnded(...arguments);\n    });\n    __publicField(this, \"onPlaybackRateChange\", function () {\n      return _this.props.onPlaybackRateChange(...arguments);\n    });\n    __publicField(this, \"mute\", () => {\n      this.callPlayer(\"mute\");\n    });\n    __publicField(this, \"unmute\", () => {\n      this.callPlayer(\"unmute\");\n    });\n  }\n  componentDidMount() {\n    this.props.onMount && this.props.onMount(this);\n  }\n  load(url) {\n    const {\n      playing,\n      muted,\n      controls,\n      onReady,\n      config,\n      onError\n    } = this.props;\n    (0, import_utils.getSDK)(SDK_URL, SDK_GLOBAL).then(Wistia2 => {\n      if (config.customControls) {\n        config.customControls.forEach(control => Wistia2.defineControl(control));\n      }\n      window._wq = window._wq || [];\n      window._wq.push({\n        id: this.playerID,\n        options: {\n          autoPlay: playing,\n          silentAutoPlay: \"allow\",\n          muted,\n          controlsVisibleOnLoad: controls,\n          fullscreenButton: controls,\n          playbar: controls,\n          playbackRateControl: controls,\n          qualityControl: controls,\n          volumeControl: controls,\n          settingsControl: controls,\n          smallPlayButton: controls,\n          ...config.options\n        },\n        onReady: player => {\n          this.player = player;\n          this.unbind();\n          this.player.bind(\"play\", this.onPlay);\n          this.player.bind(\"pause\", this.onPause);\n          this.player.bind(\"seek\", this.onSeek);\n          this.player.bind(\"end\", this.onEnded);\n          this.player.bind(\"playbackratechange\", this.onPlaybackRateChange);\n          onReady();\n        }\n      });\n    }, onError);\n  }\n  unbind() {\n    this.player.unbind(\"play\", this.onPlay);\n    this.player.unbind(\"pause\", this.onPause);\n    this.player.unbind(\"seek\", this.onSeek);\n    this.player.unbind(\"end\", this.onEnded);\n    this.player.unbind(\"playbackratechange\", this.onPlaybackRateChange);\n  }\n  play() {\n    this.callPlayer(\"play\");\n  }\n  pause() {\n    this.callPlayer(\"pause\");\n  }\n  stop() {\n    this.unbind();\n    this.callPlayer(\"remove\");\n  }\n  seekTo(seconds) {\n    let keepPlaying = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    this.callPlayer(\"time\", seconds);\n    if (!keepPlaying) {\n      this.pause();\n    }\n  }\n  setVolume(fraction) {\n    this.callPlayer(\"volume\", fraction);\n  }\n  setPlaybackRate(rate) {\n    this.callPlayer(\"playbackRate\", rate);\n  }\n  getDuration() {\n    return this.callPlayer(\"duration\");\n  }\n  getCurrentTime() {\n    return this.callPlayer(\"time\");\n  }\n  getSecondsLoaded() {\n    return null;\n  }\n  render() {\n    const {\n      url\n    } = this.props;\n    const videoID = url && url.match(import_patterns.MATCH_URL_WISTIA)[1];\n    const className = \"wistia_embed wistia_async_\".concat(videoID);\n    const style = {\n      width: \"100%\",\n      height: \"100%\"\n    };\n    return /* @__PURE__ */import_react.default.createElement(\"div\", {\n      id: this.playerID,\n      key: videoID,\n      className,\n      style\n    });\n  }\n}\n__publicField(Wistia, \"displayName\", \"Wistia\");\n__publicField(Wistia, \"canPlay\", import_patterns.canPlay.wistia);\n__publicField(Wistia, \"loopOnEnded\", true);"],"sourceRoot":""}